"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
const rest_1 = require("@discordjs/rest");
const discord_js_1 = require("discord.js");
const GuildCommandManager_1 = require("./managers/GuildCommandManager");
const ListenerManager_1 = require("./managers/ListenerManager");
const ModuleManager_1 = require("./managers/ModuleManager");
class Client extends discord_js_1.Client {
    moduleManager;
    listenerManager;
    guildCommandManager;
    restClient;
    constructor(options) {
        super(options);
        this.moduleManager = new ModuleManager_1.ModuleManger(this);
        this.listenerManager = new ListenerManager_1.ListenerManager(this);
        this.guildCommandManager = new GuildCommandManager_1.GuildCommandManager(this);
        this.restClient = new rest_1.REST({ version: "10" }).setToken(process.env.DISCORD_APPLICATION_TOKEN);
        this.on("interactionCreate", async (interaction) => {
            if (!interaction.isCommand())
                return;
            interaction.options.getSubcommand();
            const command = this.guildCommandManager.registry.find((c) => c.options.data.name === interaction.commandName);
            if (command) {
                try {
                    await command.execute(interaction);
                }
                catch (err) {
                    console.error(err);
                    await interaction
                        .reply("An unexpected error occurred during the execution of this command," +
                        " please contact an administrator.")
                        .catch(console.error);
                }
            }
        });
    }
}
exports.Client = Client;
