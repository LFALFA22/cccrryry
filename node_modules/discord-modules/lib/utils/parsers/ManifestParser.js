"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManifestParser = void 0;
const jsonschema_1 = require("jsonschema");
// Notable resources:
//      https://github.com/tdegrunt/jsonschema
//      https://ajv.js.org/guide/typescript.html
// todo: Replace hard-coded schema with configurable json file.
class ManifestParser {
    manifestSchema = {
        id: "/manifest",
        type: "object",
        properties: {
            name: {
                type: "sting"
            },
            version: {
                type: "string"
            },
            description: {
                type: "string"
            }
        },
        required: ["name", "version"]
    };
    jsonValidator;
    constructor() {
        this.jsonValidator = new jsonschema_1.Validator();
    }
    validate(manifestJson) {
        return this.jsonValidator.validate(manifestJson, this.manifestSchema);
    }
    isValid(manifestJson) {
        return this.jsonValidator.validate(manifestJson, this.manifestSchema)
            .valid;
    }
}
exports.ManifestParser = ManifestParser;
